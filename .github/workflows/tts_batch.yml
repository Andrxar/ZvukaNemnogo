name: TTS Batch Synthesis

on:
  workflow_dispatch:

jobs:
  synthesize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    env:
      # Передаём B2 credentials из Secrets в окружение runner-а
      B2_KEY_ID: ${{ secrets.B2_KEY_ID }}
      B2_APP_KEY: ${{ secrets.B2_APP_KEY }}
      B2_BUCKET_ID: ${{ secrets.B2_BUCKET_ID }}
      B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }} # опционально
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Diagnose File State before script
        run: |
          echo "--- Checking if tts_batch.log exists BEFORE python script: ---"
          if [ -f "tts_batch.log" ]; then
            tail -n 5 tts_batch.log || true
          else
            echo "tts_batch.log does not exist yet."
          fi
          echo "--- End of initial diagnosis ---"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Run TTS batch script
        id: run_tts
        run: |
          python -u tts_batch.py || true

      - name: Archive mp3 results (only if zip missing)
        if: always()
        run: |
          if [ -f "mp3_results.zip" ]; then
            echo "mp3_results.zip already exists (left by script)."
          else
            if [ -d "output_mp3" ]; then
              zip -r mp3_results.zip output_mp3
            else
              echo "No output_mp3 dir found, nothing to zip."
            fi
          fi

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mp3_results
          path: mp3_results.zip

      - name: Commit and push log file
        if: always()
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git pull --rebase || true
          git add -f tts_batch.log || true
          if ! git diff --staged --quiet; then
            git commit -m "Update tts_batch.log with latest progress" || true
            git push || true
          else
            echo "No changes in log file to commit."
          fi

      - name: Delete uploaded artifact from GitHub if B2 upload succeeded
        if: always() && hashFiles('.b2_upload_ok.json') != ''
        run: |
          echo "Found .b2_upload_ok.json — attempt to delete artifact 'mp3_results' from this repo"
          cat .b2_upload_ok.json || true
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name || github.repository }}"
          resp=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/${OWNER}/${REPO}/actions/artifacts")
          echo "$resp" > artifacts_list.json
          artifact_id=$(echo "$resp" | jq '.artifacts[] | select(.name=="mp3_results") | .id' | head -n1)
          if [ -z "$artifact_id" ] || [ "$artifact_id" = "null" ]; then
            echo "Artifact 'mp3_results' not found in repo artifacts list. Nothing to delete."
            exit 0
          fi
          echo "Artifact id to delete: $artifact_id"
          delete_resp=$(curl -s -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/${OWNER}/${REPO}/actions/artifacts/${artifact_id}")
          echo "Delete response: $delete_resp"
          status=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/${OWNER}/${REPO}/actions/artifacts/${artifact_id}")
          if [ "$status" = "404" ]; then
            echo "Artifact deleted successfully."
            rm -f .b2_upload_ok.json || true
          else
            echo "Artifact deletion may have failed, HTTP status: $status"
            exit 1
          fi
